<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.second.FeatureMapper" >
  <resultMap id="BaseResultMap" type="com.example.model.Feature" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="var_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="alias" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="default_value" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="data_type" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="biz_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="update_by" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_at" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="update_at" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, var_name, alias, default_value, data_type, description, biz_id, create_by, 
    update_by, create_at, update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from feature
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from feature
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.model.Feature" >
    insert into feature (id, name, var_name, 
      alias, default_value, data_type, 
      description, biz_id, create_by, 
      update_by, create_at, update_at
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{varName,jdbcType=VARCHAR}, 
      #{alias,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{bizId,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, 
      #{updateBy,jdbcType=VARCHAR}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.Feature" >
    insert into feature
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="varName != null" >
        var_name,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="defaultValue != null" >
        default_value,
      </if>
      <if test="dataType != null" >
        data_type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="bizId != null" >
        biz_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="varName != null" >
        #{varName,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null" >
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="bizId != null" >
        #{bizId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.Feature" >
    update feature
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="varName != null" >
        var_name = #{varName,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null" >
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="bizId != null" >
        biz_id = #{bizId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.Feature" >
    update feature
    set name = #{name,jdbcType=VARCHAR},
      var_name = #{varName,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      biz_id = #{bizId,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>